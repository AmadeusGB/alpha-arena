version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: alpha_arena_postgres
    environment:
      POSTGRES_DB: alpha_arena
      POSTGRES_USER: arena_user
      POSTGRES_PASSWORD: arena_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arena_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: alpha_arena_backend
    environment:
      DATABASE_URL: postgresql://arena_user:arena_password@postgres:5432/alpha_arena
      SILICONFLOW_API_KEY: ${SILICONFLOW_API_KEY:-}
      SILICONFLOW_BASE_URL: ${SILICONFLOW_BASE_URL:-https://api.siliconflow.cn/v1}
      BITGET_API_KEY: ${BITGET_API_KEY:-}
      BITGET_SECRET_KEY: ${BITGET_SECRET_KEY:-}
      BITGET_PASSPHRASE: ${BITGET_PASSPHRASE:-}
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: alpha_arena_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    restart: unless-stopped

volumes:
  postgres_data:

